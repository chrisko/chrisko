# Chris Koenig
# ~/.zshrc

# From http://stackoverflow.com/q/4351244, steps to profile this .zshrc:
# Add at the beginning of the file:
#     setopt prompt_subst
#     PS4='+$(date "+%s:%N") %N:%i> '
#     exec 3>&2 2>/tmp/startlog.$$
#     setopt xtrace
# And at the end:
#     unsetopt xtrace
#     exec 2>&3 3>&-

# From https://github.com/MrElendig/dotfiles-alice/blob/master/.zshrc
setprompt () {
    # load some modules
    autoload -U colors zsh/terminfo # Used in the colour alias below
    colors
    setopt prompt_subst

    # make some aliases for the colours: (coud use normal escap.seq's too)
    for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
        eval PR_$color='%{$fg[${(L)color}]%}'
    done
    PR_NO_COLOR="%{$terminfo[sgr0]%}"

    # Check the UID
    if [[ $UID -ge 1000 ]]; then # normal user
        eval PR_USER='${PR_GREEN}%n${PR_NO_COLOR}'
        eval PR_USER_OP='${PR_GREEN}%#${PR_NO_COLOR}'
    elif [[ $UID -eq 0 ]]; then # root
        eval PR_USER='${PR_RED}%n${PR_NO_COLOR}'
        eval PR_USER_OP='${PR_RED}%#${PR_NO_COLOR}'
    fi

    # Check if we are on SSH or not
    if [[ -n "$SSH_CLIENT"  ||  -n "$SSH2_CLIENT" ]]; then
        eval PR_HOST='${PR_YELLOW}%M${PR_NO_COLOR}' #SSH
    else
        eval PR_HOST='${PR_GREEN}%M${PR_NO_COLOR}' # no SSH
    fi
    # set the prompt
    PS1=$'${PR_NO_COLOR}[${PR_USER}${PR_NO_COLOR}@${PR_HOST}${PR_NO_COLOR}][${PR_BLUE}%~${PR_NO_COLOR}]${PR_USER_OP}${PR_NO_COLOR} '
    PS2=$'%_>'
}
setprompt

# Don't tell me what you thought I typed.
# I'll tell you what I typed. By typing it.
unsetopt correct_all

# If there's a ~/.zsh directory, keep one history file per shell:
if [[ -d "$HOME/.zsh" ]]; then
    HISTFILE=$HOME/.zsh/hist.$$
fi

# Speed up my git completion, which is painfully slow, by keeping it local:
# From http://talkings.org/post/5236392664/zsh-and-slow-git-completion
__git_files () {
    _wanted files expl 'local files' _files
}

# Enable vi editing. Only *after* this should we set our other bindkeys.
bindkey -v
# Use control-r to search backwards in history. Useful stuff.
bindkey "^r" history-incremental-search-backward

# No beeping
set nobeep

# Set up a couple aliases
alias vimo="vim -O"
alias ifind="find . -iname"
alias cd..="cd .."

# Tell zsh to print the last command's elapsed time, if greater than 60s.
REPORTTIME=60

# Print out a quote, if the script exists and is executable.
[[ -x ~/src/ckoenig/bin/motd ]] && ~/src/ckoenig/bin/motd

# Make sure to run rvm to wrap our ruby commands:
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
