# .zshrc contains settings for interactive shells only.

# http://stevelosh.com/blog/2010/02/my-extravagant-zsh-prompt/
function prompt_char {
#    if [[ `uname` = "Darwin" ]]; then
#        git branch &> /dev/null
#        if [[ $? -eq 0 ]]; then
#            echo -ne "\u00b1"
#        else
#            echo -ne "\u25cb"
#        fi
#    fi
}

## Command Prompt ##############################################################
# This turns on command substitution in the prompt, so it'll be reevaluated.
setopt PROMPT_SUBST
# %U starts underline mode, and the later %u stops it.
# %n outputs $USERNAME, then @, then %m is the hostname up to the first '.'.
# %B and %b start and stop boldface mode.
# %h is the shell history event number.
# %~ is the PWD, with a bit of string interpolation to manage $HOME.
export PROMPT='%U%n@%m%u[%B%h%b]%B%~%b$(prompt_char) '

# vi editing
bindkey -v

# No beeping
set nobeep

# Set up aliases
alias vimo='vim -O'
alias ifind='find . -iname'
alias cd..="cd .."

# Start keychain to store passphrases:
KEYCHAIN_SOURCE=~/.keychain/`hostname`-sh
[[ -e $KEYCHAIN_SOURCE ]] && source $KEYCHAIN_SOURCE
[[ -e /usr/bin/keychain ]] && /usr/bin/keychain -q -Q --nogui ~/.ssh/id_rsa ~/.ssh/id_dsa
[[ -e $KEYCHAIN_SOURCE ]] && source $KEYCHAIN_SOURCE

# zsh completion
autoload -U compinit; compinit;
# For ssh hosts:
if [[ -e $HOME/.ssh/known_hosts ]]; then
    hosts=(${${${(f)"$(<$HOME/.ssh/known_hosts)"}%%\ *}%%,*})
    zstyle ':completion:*' hosts make $hosts
fi

# Tell zsh to print the elapsed time, if greater than 60s.
REPORTTIME=60

# Print out a quote, if the script exists and is executable:
[[ -x ~/src/ckoenig/bin/motd ]] && ~/src/ckoenig/bin/motd

# Cygwin always seems to start me in the wrong directory, thus:
[[ `uname` != "Darwin" ]] && cd ~ckoenig
