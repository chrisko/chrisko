# Chris Koenig
# ~/.zshenv

# .zshenv sets up the environment for all shells, regardless of interactivity.
# Nothing here had better output anything, or you'll see some weird behavior.

# Set the locale for all applications. Note that LC_ALL takes precedence over
# LANG, LC_COLLATE, LC_CTYPE, LC_MESSAGES, LC_MONETARY, LC_NUMERIC, and LC_TIME.
export LC_ALL=en_US.UTF-8

export EDITOR=vim

# The brew-installed EC2 scripts ask us to include the following:
if [[ -d $HOME/.ec2 ]]; then
    export JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Home"
    export EC2_PRIVATE_KEY="$(/bin/ls $HOME/.ec2/pk-*.pem)"
    export EC2_CERT="$(/bin/ls $HOME/.ec2/cert-*.pem)"
    export EC2_HOME="/usr/local/Cellar/ec2-api-tools/1.4.2.2/jars"
fi

# Commented out due to Mountain Lion; ref. http://lesspress.net/Mountain-Lion-DYLD_LIBRARY_PATH
#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib:/usr/lib
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig
# Related to Mountain Lion; ref. https://github.com/mxcl/homebrew/issues/13572
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/Library/Homebrew/pkgconfig

# Use the GCC-4.2 compiler provided by the homebrew formula "apple-gcc42":
export CC=/usr/local/bin/gcc-4.2

# Set the PATH. Make sure the homebrew bin directory, /usr/local/bin, is first.
export PATH=/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/sbin

# Tack on a few optional directories, if they exist on the local host.
# If these directories exist, they should go before the system PATH
PREPATHDIRS=(/usr/local/share/python)
for DIR in $PREPATHDIRS; do [[ -e $DIR ]] && export PATH=$DIR:$PATH; done
# One's for my motd, one for the MacTex distribution, and one for rvm:
POSTPATHDIRS=($HOME/src/ckoenig/bin /usr/texbin $HOME/.rvm/bin)
for DIR in $POSTPATHDIRS; do [[ -e $DIR ]] && export PATH=$PATH:$DIR; done

# Look for launchd's SSH authentication socket on OS X:
if [[ `uname` = "Darwin" ]]; then
    if [[ `ls /tmp/launch-*/Listeners 2> /dev/null | wc -l` -gt 0 ]]; then
        if [[ `ls /tmp/launch-*/Listeners | wc -l` -lt 2 ]]; then
            export SSH_AUTH_SOCK=`ls /tmp/launch-*/Listeners`
        fi
    fi
fi

# Set up PYTHONPATH. Some directories are specific to homebrew
# installations, and some are for use on eniac, for CIS-530.
PYTHONDIRS=(
    /usr/local/Cellar/python/2.7.2/lib/python2.7/site-packages
    /home1/c/cis530/Software/python2.6/site-packages
    $HOME/src/nltk
)

for PYTHONDIR in $PYTHONDIRS; do
    [[ -d $PYTHONDIR ]] && export PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$PYTHONDIR
done

# Set Node to use modules in the homebrew install location:
export NODE_PATH=/usr/local/lib/node_modules

# For NLTK, check for the CIS-530 data directory, otherwise use source.
if [[ -d /home1/c/cis530/data ]]; then
    export NLTK_DATA=/home1/c/cis530/data
else
    export NLTK_DATA=/usr/share/nltk_data
fi

# If our AWS credentials are in this file, haul them on in.
# Should set both AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
[[ -e $HOME/.ec2/credentials.sh ]] && source $HOME/.ec2/credentials.sh

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
