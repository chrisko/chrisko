# .zshenv sets up the environment for all shells, regardless of interactivity.
# Nothing here had better output anything, or you'll see some weird behavior.

# Set the locale for all applications. Note that LC_ALL takes precedence over
# LANG, LC_COLLATE, LC_CTYPE, LC_MESSAGES, LC_MONETARY, LC_NUMERIC, and LC_TIME.
export LC_ALL=en_US.UTF-8

export EDITOR=vim

# The brew-installed EC2 scripts ask us to include the following:
export JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Home"
export EC2_PRIVATE_KEY="$(/bin/ls $HOME/.ec2/pk-*.pem)"
export EC2_CERT="$(/bin/ls $HOME/.ec2/cert-*.pem)"
export EC2_HOME="/usr/local/Cellar/ec2-api-tools/1.4.2.2/jars"

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib:/usr/lib
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig

# Set the PATH. Make sure the homebrew bin directory, /usr/local/bin, is first.
export PATH=/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/sbin

# Tack on a few optional directories, if they exist on the local host.
# One's for the MacTex distribution, another's for the homebrew Ruby install.
PATHDIRS=(~/src/ckoenig/bin /usr/texbin /usr/local/Cellar/ruby/1.9.2-p290/bin)
for DIR in $PATHDIRS; do [[ -e $DIR ]] && export PATH=$PATH:$DIR; done

# Look for launchd's SSH authentication socket on OS X:
export SSH_AUTH_SOCK=$(ls /tmp/launch-*/Listeners)

# And set a couple application-specific flags:
export NODE_PATH=/usr/local/lib/node_modules
export NLTK_DATA=~/src/nltk/nltk_data/packages
